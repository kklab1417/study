package shiyan4;
public class shiyan4 {
    public static void main(String[] args) {
	System.out.println("实现两个字符串数组的逆序排序，输出结果为：");
        shiyan4.Stringshuzu();
	System.out.println("两个整形数组的交集为：");
        shiyan4.Intshuzu();
	System.out.println("两个浮点型数组的并集为：");
        shiyan4.Floatshuzu();
                
    }
          //实现两个字符串数组的逆序排序，输出结果为字符串数组；
  public static void Stringshuzu () 
  {
    String[] a1={"1","2","a"};
    String[] a2={"3","4","a","b","c"};
    String[] result = new String[a1.length+a2.length] ;
    int j = 0 ;
    
    for(int i=a1.length -1;i>=0 ;i--,j++)
    {
        result[j] = a1[i] ; 
    }
    for(int i=a2.length -1;i>=0 ;i--,j++)
    {
        result[j] = a2[i] ; 
    }
    
    for (String s:result) {
            System.out.printf(s);
        }
    System.out.println();
  }
         //求两个整形数组的交集
  public static void Intshuzu(){
    int[] b1={1,2,3,4,5};
    int[] b2={2,3,4,5,6,7,8};
    int[] result = new int[b1.length+b2.length];
    int k = 0;
	for(int i=0;i<b1.length;i++) {
            for(int j=0;j<b2.length;j++) {
		if(b1[i]==b2[j]) {
                    result[k++]=b1[i];
                                   }
                                          }
                                   }
    for (int i=0;i < k; i++) {
            System.out.print(result[i]);
            System.out.print("  ");
            System.out.println("");
        }
  }

         //求两个浮点型数组的并集
  public static void Floatshuzu(){
      float[] c1={1,2,-3,-4,5};
      float[] c2={5,-3,7,-8,9,10};
      float[] result = new float[c1.length + c2.length];
      int k=0;
      for(int i=0;i<c1.length;i++){
      result[k++] = c1[i];
      }
      
       for(int j=0;j <c2.length;j++){
          int flag=0;
         for(int i=0;i <c1.length;i++){
          if(result[i]==c2[j])
          { flag =1;}
      }
         if(flag == 0)
         {result[k++]=c2[j];}
      }
      for (int i=0;i < k; i++) {
            System.out.print(result[i]);
            System.out.print("  ");
  }
 }
}
